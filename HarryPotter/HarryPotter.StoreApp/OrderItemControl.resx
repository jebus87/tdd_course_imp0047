<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9pUqVLJtP//Z
</value>
  </data>
</root>